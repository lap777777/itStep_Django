
1. nastartovani projektu:
    django-admin startproject NAZEV_PROJEKTU  - vytvori podslozku, kde je projekt
    django-admin startproject NAZEV_PROJEKTU . - vytvori projekt ve slouzce, kde aktualne jsem

2. spusteni aplikace:
    musim se presunout do adresare, kde je projekt
    python3 manage.py startapp NAZEV_APLIKACE

3. spustit migraci:
    python3 manage.py migrate

4. spustit server:
    python3 manage.py runserver

### propojeni urls projektu s aplikacemi:
urls.py:
    from django.urls import include
    do urlpatterns = [ ] pridat cestu na aplikaci:
    path("aplikace/", include("aplikace.urls")),
    nebo muzu nastavit pro index:
    path("", include("aplikace.urls")),
settings.py:
    pridani aplikace do INSTALLED_APPS - pro renderovani (tvorbu stranek ze sablon)
    INSTALLED_APPS = [
        "informace",
    ]
    DEBAG = True - pracovni mod, na produkcnim modu po nahrani na web dat False

### v aplikaci
aplikace/urls.py (definuji cestu na views, ktere se budou zobrazovat):
    from django.urls import path  ... import metody path
    from . import views ... import views ze slozky dane aplikace
    zadam cesty na zobrazeni stranek do urlpattens = []
    path("", views.index),
    path("<animal>", views.info_o_zvireti), ... v zavorkach <> zadavam parametry
    path("<prvni>/<druhy>", views.ukazka),
    - path convertor - int, str, slug, uuid, path, priklad muzu volat jinou funkci pokud dam: 
        <str:animal> nebo <int:animal>
aplikace/views.py (definuji funkce, kde definuji parametry, ktere se maji zobrazit):
    from django.shortcuts import render
    from django.http import HttpResponse
    tady vytvorim views, ktere se zavolaji, kdyz prijde HTTP request
    nazvy funkci pak volam v souboru urls (rozcestnik)
    def index(request):
        return HttpResponse("Moje prvni stranka")
    def info_o_zvireti(request):
        response = zvirata[animal]  ... nacitam si data ze slovniku, podle zadaneho zvirete
        return HttpResponse(response)
    def ukazka(request, prvni, druhy):
        return HttpResponse(f"Prvni je {prvni}, druhy je {druhy}.")
    from django.http import HttpResponse, HttpResponseNotFound, HttpResponseRedirect
    osetreni chyb,kdyz nenajde stranku:
        try:    
            return HttpResponse ....
        except
            return HttpResponseNotFound ("Stranka nenalezena")
    presmerovani:
        return HttpResponseRedirect(nazev funkce)
    renderovani - tvorba http stranek ze sablon
        vlozit do views:
        from django.shortcuts import render
        funkce budou vracet odkazy na html stranky v templates:
        return render(request, "informace/info.html", {slovnik, kde jsou odkazy na <parametry>})

aplikace/templates/ (tady definuji stranky, ktere se po zavolani funkce ve views zobrazi)
    tady ukladam svoje sablony html.stranek - vkladam do nich normalni kod + filtry {{ | }} + tagy {% %}


python3 manage.py makemigrations NAZEV_APLIKACE ... ulozi zmeny v modelech jako migrace
